# -*- coding: utf-8 -*-
"""A1_13_DL_P-06.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1daE2Le_qoRUJtyZ4tnbwgl2jsn_E7Evf
"""

from google.colab import drive
drive.mount('/content/drive')

from keras.models import Sequential
from keras.layers import Conv2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.layers import Dense,Dropout,BatchNormalization
from tensorflow.keras.regularizers import l2

import kagglehub

# Download latest version
path = kagglehub.dataset_download("utkarshsaxenadn/fruits-classification")

print("Path to dataset files:", path)

import zipfile
zip_ref = zipfile.ZipFile('/content/DL Lab 6.zip', 'r')
# zip_ref = zipfile.ZipFile('/content/fruits-classification.zip', 'r')
zip_ref.extractall('/content')
zip_ref.close()

classifier = Sequential()

# Convolution
classifier.add(Conv2D(32, 5, 5, input_shape = (256, 256, 3), activation = 'relu', kernel_regularizer=l2(l2=0.001)))
#classifier.add(BatchNormalization())

# Adding a second convolutional layer
classifier.add(Conv2D(64, 5, 5, activation = 'relu',kernel_regularizer=l2(l2=0.001)))
#classifier.add(BatchNormalization())
classifier.add(MaxPooling2D(pool_size = (2, 2)))
#classifier.add(Dropout(0.3))

# Flattening
classifier.add(Flatten())

# Full connection
classifier.add(Dense(128, activation = 'relu',kernel_regularizer=l2(l2=0.001)))
#classifier.add(Dropout(0.2))
classifier.add(Dense(1, activation = 'sigmoid'))

classifier.summary()

classifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])

#from keras.preprocessing.image import ImageDataGenerator
from tensorflow.keras.preprocessing.image import ImageDataGenerator
train_datagen = ImageDataGenerator(rescale = 1./255,
                                   shear_range = 0.2,
                                   zoom_range = 0.2,
                                   horizontal_flip = True)

test_datagen = ImageDataGenerator(rescale = 1./255)

import os
print(os.listdir('/content'))  # Check the extracted folder names

import os

# Check the contents of the 'Fruits Classification' folder
print(os.listdir('/content/Fruits Classification'))

training_set = train_datagen.flow_from_directory(
    '/content/Fruits Classification/train',   # Correct path
    target_size=(256, 256),
    batch_size=16,
    class_mode='binary'
)

test_set = test_datagen.flow_from_directory(
    '/content/Fruits Classification/test',   # Correct path
    target_size=(256, 256),
    batch_size=16,
    class_mode='binary'
)

!pip install livelossplot
from livelossplot import PlotLossesKerasTF

classifier.fit(training_set,epochs=5,validation_data = test_set,callbacks=[PlotLossesKerasTF()])

import numpy as np
from keras.preprocessing import image
test_image = image.load_img('/content/dogs_vs_cats/test/cats/cat.10.jpg',target_size=(256,256))
test_image = image.img_to_array(test_image)
test_image = np.expand_dims(test_image,axis=0)
result = classifier.predict(test_image)
training_set.class_indices
if result[0][0]>=0.5:
    prediction= 'dog'
    print('Result is',result[0][0])
else:
    prediction = 'cat'
    print('Result is',result[0][0])
print(prediction)

